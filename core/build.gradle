plugins {
    id 'java'
    id 'maven-publish'
}

archivesBaseName = "geckolib-core"

project.evaluationDependsOn(":mclib")

repositories {
    repositories {
        mavenCentral() {
            content {
                includeGroup("com.google.code.gson")
                includeGroup("it.unimi.dsi")
            }
        }
    }

}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 17
    source(project(":mclib").sourceSets.main.allSource)
}

tasks.withType(org.gradle.jvm.tasks.Jar) {
    from(rootProject.file("LICENSE"))
    from(project(":mclib").file("LICENSE-mclib"))
    from(project(":mclib").file("LICENSE-particleman"))
    from(project(":mclib").sourceSets.main.allSource)
}

dependencies {
    compileOnly project(":mclib")
    implementation "com.google.code.gson:gson:${gson_version}"
    implementation "it.unimi.dsi:fastutil:${fastutil_version}"
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : project_name,
                'Specification-Vendor'    : authors,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project_name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId base.archivesName.get()
            from components.java
        }
    }
    repositories {
        if (System.getenv("cloudUsername") == null  && findProperty("cloudUsername") == null) {
            mavenLocal()
        }
        else maven {
            name =  "cloudsmith"
            url = "https://maven.cloudsmith.io/geckolib3/geckolib/"
            credentials {
                username = System.getenv("cloudUsername")
                password = System.getenv("cloudPassword")
            }
        }
    }
}